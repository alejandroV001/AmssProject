{"ast":null,"code":"import _asyncToGenerator from \"D:\\\\AMSS\\\\AmssProject\\\\AmssProject\\\\ClientApp\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { AuthenticationResultStatus } from '../authorize.service';\nimport { BehaviorSubject } from 'rxjs';\nimport { LoginActions, QueryParameterNames, ApplicationPaths, ReturnUrlType } from '../api-authorization.constants';\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../authorize.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/material/form-field\";\nimport * as i5 from \"@angular/material/input\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/material/button\";\nimport * as i8 from \"@angular/material/icon\";\n\nfunction LoginComponent_mat_error_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.getErrorMessage(\"email\"));\n  }\n} // The main responsibility of this component is to handle the user's login process.\n// This is the starting point for the login process. Any component that needs to authenticate\n// a user can simply perform a redirect to this component with a returnUrl query parameter and\n// let the component perform the login and return back to the return url.\n\n\nexport class LoginComponent {\n  constructor(formBuilder, authorizeService, activatedRoute, router) {\n    this.formBuilder = formBuilder;\n    this.authorizeService = authorizeService;\n    this.activatedRoute = activatedRoute;\n    this.router = router;\n    this.message = new BehaviorSubject(null);\n    this.hide = true;\n    this.loginForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required]\n    });\n  }\n\n  ngOnInit() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const action = _this.activatedRoute.snapshot.url[1];\n\n      switch (action.path) {\n        case LoginActions.Login:\n          yield _this.login(_this.getReturnUrl());\n          break;\n\n        case LoginActions.LoginCallback:\n          yield _this.processLoginCallback();\n          break;\n\n        case LoginActions.LoginFailed:\n          const message = _this.activatedRoute.snapshot.queryParamMap.get(QueryParameterNames.Message);\n\n          _this.message.next(message);\n\n          break;\n\n        case LoginActions.Profile:\n          _this.redirectToProfile();\n\n          break;\n\n        case LoginActions.Register:\n          _this.redirectToRegister();\n\n          break;\n\n        default:\n          throw new Error(`Invalid action '${action}'`);\n      }\n    })();\n  }\n\n  getErrorMessage(controlName) {\n    const control = this.loginForm.get(controlName);\n\n    if (control === null || control === void 0 ? void 0 : control.hasError('required')) {\n      return 'You must enter a value';\n    }\n\n    return (control === null || control === void 0 ? void 0 : control.hasError('email')) ? 'Not a valid email' : '';\n  }\n\n  onSubmit() {}\n\n  login(returnUrl) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      const state = {\n        returnUrl\n      };\n      const result = yield _this2.authorizeService.signIn(state);\n\n      _this2.message.next(undefined);\n\n      switch (result.status) {\n        case AuthenticationResultStatus.Redirect:\n          break;\n\n        case AuthenticationResultStatus.Success:\n          yield _this2.navigateToReturnUrl(returnUrl);\n          break;\n\n        case AuthenticationResultStatus.Fail:\n          yield _this2.router.navigate(ApplicationPaths.LoginFailedPathComponents, {\n            queryParams: {\n              [QueryParameterNames.Message]: result.message\n            }\n          });\n          break;\n\n        default:\n          throw new Error(`Invalid status result ${result.status}.`);\n      }\n    })();\n  }\n\n  processLoginCallback() {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      const url = window.location.href;\n      const result = yield _this3.authorizeService.completeSignIn(url);\n\n      switch (result.status) {\n        case AuthenticationResultStatus.Redirect:\n          // There should not be any redirects as completeSignIn never redirects.\n          throw new Error('Should not redirect.');\n\n        case AuthenticationResultStatus.Success:\n          yield _this3.navigateToReturnUrl(_this3.getReturnUrl(result.state));\n          break;\n\n        case AuthenticationResultStatus.Fail:\n          _this3.message.next(result.message);\n\n          break;\n      }\n    })();\n  }\n\n  redirectToRegister() {\n    this.redirectToApiAuthorizationPath(`${ApplicationPaths.IdentityRegisterPath}?returnUrl=${encodeURI('/' + ApplicationPaths.Login)}`);\n  }\n\n  redirectToProfile() {\n    this.redirectToApiAuthorizationPath(ApplicationPaths.IdentityManagePath);\n  }\n\n  navigateToReturnUrl(returnUrl) {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      // It's important that we do a replace here so that we remove the callback uri with the\n      // fragment containing the tokens from the browser history.\n      yield _this4.router.navigateByUrl(returnUrl, {\n        replaceUrl: true\n      });\n    })();\n  }\n\n  getReturnUrl(state) {\n    const fromQuery = this.activatedRoute.snapshot.queryParams.returnUrl; // If the url is coming from the query string, check that is either\n    // a relative url or an absolute url\n\n    if (fromQuery && !(fromQuery.startsWith(`${window.location.origin}/`) || /\\/[^\\/].*/.test(fromQuery))) {\n      // This is an extra check to prevent open redirects.\n      throw new Error('Invalid return url. The return url needs to have the same origin as the current page.');\n    }\n\n    return state && state.returnUrl || fromQuery || ApplicationPaths.DefaultLoginRedirectPath;\n  }\n\n  redirectToApiAuthorizationPath(apiAuthorizationPath) {\n    // It's important that we do a replace here so that when the user hits the back arrow on the\n    // browser they get sent back to where it was on the app instead of to an endpoint on this\n    // component.\n    const redirectUrl = `${window.location.origin}/${apiAuthorizationPath}`;\n    window.location.replace(redirectUrl);\n  }\n\n}\n\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthorizeService), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i3.Router));\n};\n\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 22,\n  vars: 6,\n  consts: [[1, \"center-form\", 3, \"formGroup\", \"ngSubmit\"], [1, \"example-container\"], [\"matInput\", \"\", \"placeholder\", \"pat@example.com\", \"formControlName\", \"email\", \"required\", \"\"], [4, \"ngIf\"], [\"matInput\", \"\", \"formControlName\", \"password\", \"required\", \"\", 3, \"type\"], [\"mat-icon-button\", \"\", \"matSuffix\", \"\", 3, \"click\"], [1, \"button-container\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\"], [1, \"register-link\"], [\"href\", \"#\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(1, \"div\", 1);\n      i0.ɵɵelementStart(2, \"mat-form-field\");\n      i0.ɵɵelementStart(3, \"mat-label\");\n      i0.ɵɵtext(4, \"Enter your email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(5, \"input\", 2);\n      i0.ɵɵtemplate(6, LoginComponent_mat_error_6_Template, 2, 1, \"mat-error\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"div\", 1);\n      i0.ɵɵelementStart(8, \"mat-form-field\");\n      i0.ɵɵelementStart(9, \"mat-label\");\n      i0.ɵɵtext(10, \"Enter your password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(11, \"input\", 4);\n      i0.ɵɵelementStart(12, \"button\", 5);\n      i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_12_listener() {\n        return ctx.hide = !ctx.hide;\n      });\n      i0.ɵɵelementStart(13, \"mat-icon\");\n      i0.ɵɵtext(14);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"div\", 6);\n      i0.ɵɵelementStart(16, \"button\", 7);\n      i0.ɵɵtext(17, \"Submit\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"p\", 8);\n      i0.ɵɵtext(19, \"Don't have an account? \");\n      i0.ɵɵelementStart(20, \"a\", 9);\n      i0.ɵɵtext(21, \"Register here!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      let tmp_1_0;\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx.loginForm.get(\"email\")) == null ? null : tmp_1_0.invalid);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"type\", ctx.hide ? \"password\" : \"text\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"aria-label\", \"Hide password\")(\"aria-pressed\", ctx.hide);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.hide ? \"visibility_off\" : \"visibility\");\n    }\n  },\n  directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i4.MatFormField, i4.MatLabel, i5.MatInput, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i1.RequiredValidator, i6.NgIf, i7.MatButton, i4.MatSuffix, i8.MatIcon, i4.MatError],\n  styles: [\".center-container[_ngcontent-%COMP%] {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n    height: 100vh; \\r\\n  }\\r\\n  \\r\\n  .example-container[_ngcontent-%COMP%] {\\r\\n    text-align: center;\\r\\n    margin-bottom: 16px; \\r\\n  }\\r\\n  \\r\\n  .button-container[_ngcontent-%COMP%] {\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n    margin-top: 16px; \\r\\n  }\\r\\n  \\r\\n  .center-form[_ngcontent-%COMP%] {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n    height: 80vh;\\r\\n    margin: 0;\\r\\n  }\\r\\n  \\r\\n  mat-form-field[_ngcontent-%COMP%] {\\r\\n    max-width: 400px; \\r\\n  }\\r\\n  \\r\\n  .register-link[_ngcontent-%COMP%] {\\r\\n    text-align: center;\\r\\n  }\\r\\n  \\r\\n  .register-link[_ngcontent-%COMP%]   a[_ngcontent-%COMP%] {\\r\\n    color: #1976D2;\\r\\n    text-decoration: none;\\r\\n    font-weight: bold;\\r\\n  }\\r\\n  \\r\\n  .register-link[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]:hover {\\r\\n    text-decoration: underline;\\r\\n  }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxvZ2luLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLG1CQUFtQjtJQUNuQix1QkFBdUI7SUFDdkIsYUFBYSxFQUFFLGdDQUFnQztFQUNqRDs7RUFFQTtJQUNFLGtCQUFrQjtJQUNsQixtQkFBbUIsRUFBRSw4Q0FBOEM7RUFDckU7O0VBQ0E7SUFDRSxhQUFhO0lBQ2IsdUJBQXVCO0lBQ3ZCLGdCQUFnQixFQUFFLGdFQUFnRTtFQUNwRjs7RUFFQTtJQUNFLGFBQWE7SUFDYixzQkFBc0I7SUFDdEIsbUJBQW1CO0lBQ25CLHVCQUF1QjtJQUN2QixZQUFZO0lBQ1osU0FBUztFQUNYOztFQUVBO0lBQ0UsZ0JBQWdCLEVBQUUsK0JBQStCO0VBQ25EOztFQUVBO0lBQ0Usa0JBQWtCO0VBQ3BCOztFQUVBO0lBQ0UsY0FBYztJQUNkLHFCQUFxQjtJQUNyQixpQkFBaUI7RUFDbkI7O0VBRUE7SUFDRSwwQkFBMEI7RUFDNUIiLCJmaWxlIjoibG9naW4uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jZW50ZXItY29udGFpbmVyIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgaGVpZ2h0OiAxMDB2aDsgLyogMTAwJSBvZiB0aGUgdmlld3BvcnQgaGVpZ2h0ICovXHJcbiAgfVxyXG4gIFxyXG4gIC5leGFtcGxlLWNvbnRhaW5lciB7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxNnB4OyAvKiBBZGp1c3QgdGhlIG1hcmdpbiBiZXR3ZWVuIHRoZSBmb3JtIGZpZWxkcyAqL1xyXG4gIH1cclxuICAuYnV0dG9uLWNvbnRhaW5lciB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBtYXJnaW4tdG9wOiAxNnB4OyAvKiBBZGp1c3QgdGhlIG1hcmdpbiBiZXR3ZWVuIHRoZSBwYXNzd29yZCBmaWVsZCBhbmQgdGhlIGJ1dHRvbiAqL1xyXG4gIH1cclxuICBcclxuICAuY2VudGVyLWZvcm0ge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBoZWlnaHQ6IDgwdmg7XHJcbiAgICBtYXJnaW46IDA7XHJcbiAgfVxyXG4gIFxyXG4gIG1hdC1mb3JtLWZpZWxkIHtcclxuICAgIG1heC13aWR0aDogNDAwcHg7IC8qIEFkanVzdCB0aGUgdmFsdWUgYXMgbmVlZGVkICovXHJcbiAgfVxyXG5cclxuICAucmVnaXN0ZXItbGluayB7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgfVxyXG4gIFxyXG4gIC5yZWdpc3Rlci1saW5rIGEge1xyXG4gICAgY29sb3I6ICMxOTc2RDI7XHJcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxuICB9XHJcbiAgXHJcbiAgLnJlZ2lzdGVyLWxpbmsgYTpob3ZlciB7XHJcbiAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcclxuICB9Il19 */\"]\n});","map":{"version":3,"sources":["D:/AMSS/AmssProject/AmssProject/ClientApp/src/api-authorization/login/login.component.ts"],"names":["AuthenticationResultStatus","BehaviorSubject","LoginActions","QueryParameterNames","ApplicationPaths","ReturnUrlType","Validators","i0","i1","i2","i3","i4","i5","i6","i7","i8","LoginComponent_mat_error_6_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ctx_r0","ɵɵnextContext","ɵɵadvance","ɵɵtextInterpolate","getErrorMessage","LoginComponent","constructor","formBuilder","authorizeService","activatedRoute","router","message","hide","loginForm","group","email","required","password","ngOnInit","action","snapshot","url","path","Login","login","getReturnUrl","LoginCallback","processLoginCallback","LoginFailed","queryParamMap","get","Message","next","Profile","redirectToProfile","Register","redirectToRegister","Error","controlName","control","hasError","onSubmit","returnUrl","state","result","signIn","undefined","status","Redirect","Success","navigateToReturnUrl","Fail","navigate","LoginFailedPathComponents","queryParams","window","location","href","completeSignIn","redirectToApiAuthorizationPath","IdentityRegisterPath","encodeURI","IdentityManagePath","navigateByUrl","replaceUrl","fromQuery","startsWith","origin","test","DefaultLoginRedirectPath","apiAuthorizationPath","redirectUrl","replace","ɵfac","LoginComponent_Factory","t","ɵɵdirectiveInject","FormBuilder","AuthorizeService","ActivatedRoute","Router","ɵcmp","ɵɵdefineComponent","type","selectors","decls","vars","consts","template","LoginComponent_Template","ɵɵlistener","LoginComponent_Template_form_ngSubmit_0_listener","ɵɵelement","ɵɵtemplate","LoginComponent_Template_button_click_12_listener","tmp_1_0","ɵɵproperty","invalid","ɵɵattribute","directives","ɵNgNoValidate","NgControlStatusGroup","FormGroupDirective","MatFormField","MatLabel","MatInput","DefaultValueAccessor","NgControlStatus","FormControlName","RequiredValidator","NgIf","MatButton","MatSuffix","MatIcon","MatError","styles"],"mappings":"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","sourcesContent":["import { AuthenticationResultStatus } from '../authorize.service';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { LoginActions, QueryParameterNames, ApplicationPaths, ReturnUrlType } from '../api-authorization.constants';\r\nimport { Validators } from '@angular/forms';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"@angular/forms\";\r\nimport * as i2 from \"../authorize.service\";\r\nimport * as i3 from \"@angular/router\";\r\nimport * as i4 from \"@angular/material/form-field\";\r\nimport * as i5 from \"@angular/material/input\";\r\nimport * as i6 from \"@angular/common\";\r\nimport * as i7 from \"@angular/material/button\";\r\nimport * as i8 from \"@angular/material/icon\";\r\nfunction LoginComponent_mat_error_6_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelementStart(0, \"mat-error\");\r\n    i0.ɵɵtext(1);\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const ctx_r0 = i0.ɵɵnextContext();\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵtextInterpolate(ctx_r0.getErrorMessage(\"email\"));\r\n} }\r\n// The main responsibility of this component is to handle the user's login process.\r\n// This is the starting point for the login process. Any component that needs to authenticate\r\n// a user can simply perform a redirect to this component with a returnUrl query parameter and\r\n// let the component perform the login and return back to the return url.\r\nexport class LoginComponent {\r\n    constructor(formBuilder, authorizeService, activatedRoute, router) {\r\n        this.formBuilder = formBuilder;\r\n        this.authorizeService = authorizeService;\r\n        this.activatedRoute = activatedRoute;\r\n        this.router = router;\r\n        this.message = new BehaviorSubject(null);\r\n        this.hide = true;\r\n        this.loginForm = this.formBuilder.group({\r\n            email: ['', [Validators.required, Validators.email]],\r\n            password: ['', Validators.required]\r\n        });\r\n    }\r\n    async ngOnInit() {\r\n        const action = this.activatedRoute.snapshot.url[1];\r\n        switch (action.path) {\r\n            case LoginActions.Login:\r\n                await this.login(this.getReturnUrl());\r\n                break;\r\n            case LoginActions.LoginCallback:\r\n                await this.processLoginCallback();\r\n                break;\r\n            case LoginActions.LoginFailed:\r\n                const message = this.activatedRoute.snapshot.queryParamMap.get(QueryParameterNames.Message);\r\n                this.message.next(message);\r\n                break;\r\n            case LoginActions.Profile:\r\n                this.redirectToProfile();\r\n                break;\r\n            case LoginActions.Register:\r\n                this.redirectToRegister();\r\n                break;\r\n            default:\r\n                throw new Error(`Invalid action '${action}'`);\r\n        }\r\n    }\r\n    getErrorMessage(controlName) {\r\n        const control = this.loginForm.get(controlName);\r\n        if (control === null || control === void 0 ? void 0 : control.hasError('required')) {\r\n            return 'You must enter a value';\r\n        }\r\n        return (control === null || control === void 0 ? void 0 : control.hasError('email')) ? 'Not a valid email' : '';\r\n    }\r\n    onSubmit() { }\r\n    async login(returnUrl) {\r\n        const state = { returnUrl };\r\n        const result = await this.authorizeService.signIn(state);\r\n        this.message.next(undefined);\r\n        switch (result.status) {\r\n            case AuthenticationResultStatus.Redirect:\r\n                break;\r\n            case AuthenticationResultStatus.Success:\r\n                await this.navigateToReturnUrl(returnUrl);\r\n                break;\r\n            case AuthenticationResultStatus.Fail:\r\n                await this.router.navigate(ApplicationPaths.LoginFailedPathComponents, {\r\n                    queryParams: { [QueryParameterNames.Message]: result.message }\r\n                });\r\n                break;\r\n            default:\r\n                throw new Error(`Invalid status result ${result.status}.`);\r\n        }\r\n    }\r\n    async processLoginCallback() {\r\n        const url = window.location.href;\r\n        const result = await this.authorizeService.completeSignIn(url);\r\n        switch (result.status) {\r\n            case AuthenticationResultStatus.Redirect:\r\n                // There should not be any redirects as completeSignIn never redirects.\r\n                throw new Error('Should not redirect.');\r\n            case AuthenticationResultStatus.Success:\r\n                await this.navigateToReturnUrl(this.getReturnUrl(result.state));\r\n                break;\r\n            case AuthenticationResultStatus.Fail:\r\n                this.message.next(result.message);\r\n                break;\r\n        }\r\n    }\r\n    redirectToRegister() {\r\n        this.redirectToApiAuthorizationPath(`${ApplicationPaths.IdentityRegisterPath}?returnUrl=${encodeURI('/' + ApplicationPaths.Login)}`);\r\n    }\r\n    redirectToProfile() {\r\n        this.redirectToApiAuthorizationPath(ApplicationPaths.IdentityManagePath);\r\n    }\r\n    async navigateToReturnUrl(returnUrl) {\r\n        // It's important that we do a replace here so that we remove the callback uri with the\r\n        // fragment containing the tokens from the browser history.\r\n        await this.router.navigateByUrl(returnUrl, {\r\n            replaceUrl: true\r\n        });\r\n    }\r\n    getReturnUrl(state) {\r\n        const fromQuery = this.activatedRoute.snapshot.queryParams.returnUrl;\r\n        // If the url is coming from the query string, check that is either\r\n        // a relative url or an absolute url\r\n        if (fromQuery &&\r\n            !(fromQuery.startsWith(`${window.location.origin}/`) ||\r\n                /\\/[^\\/].*/.test(fromQuery))) {\r\n            // This is an extra check to prevent open redirects.\r\n            throw new Error('Invalid return url. The return url needs to have the same origin as the current page.');\r\n        }\r\n        return (state && state.returnUrl) ||\r\n            fromQuery ||\r\n            ApplicationPaths.DefaultLoginRedirectPath;\r\n    }\r\n    redirectToApiAuthorizationPath(apiAuthorizationPath) {\r\n        // It's important that we do a replace here so that when the user hits the back arrow on the\r\n        // browser they get sent back to where it was on the app instead of to an endpoint on this\r\n        // component.\r\n        const redirectUrl = `${window.location.origin}/${apiAuthorizationPath}`;\r\n        window.location.replace(redirectUrl);\r\n    }\r\n}\r\nLoginComponent.ɵfac = function LoginComponent_Factory(t) { return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthorizeService), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i3.Router)); };\r\nLoginComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: LoginComponent, selectors: [[\"app-login\"]], decls: 22, vars: 6, consts: [[1, \"center-form\", 3, \"formGroup\", \"ngSubmit\"], [1, \"example-container\"], [\"matInput\", \"\", \"placeholder\", \"pat@example.com\", \"formControlName\", \"email\", \"required\", \"\"], [4, \"ngIf\"], [\"matInput\", \"\", \"formControlName\", \"password\", \"required\", \"\", 3, \"type\"], [\"mat-icon-button\", \"\", \"matSuffix\", \"\", 3, \"click\"], [1, \"button-container\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\"], [1, \"register-link\"], [\"href\", \"#\"]], template: function LoginComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵelementStart(0, \"form\", 0);\r\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_0_listener() { return ctx.onSubmit(); });\r\n        i0.ɵɵelementStart(1, \"div\", 1);\r\n        i0.ɵɵelementStart(2, \"mat-form-field\");\r\n        i0.ɵɵelementStart(3, \"mat-label\");\r\n        i0.ɵɵtext(4, \"Enter your email\");\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelement(5, \"input\", 2);\r\n        i0.ɵɵtemplate(6, LoginComponent_mat_error_6_Template, 2, 1, \"mat-error\", 3);\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementStart(7, \"div\", 1);\r\n        i0.ɵɵelementStart(8, \"mat-form-field\");\r\n        i0.ɵɵelementStart(9, \"mat-label\");\r\n        i0.ɵɵtext(10, \"Enter your password\");\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelement(11, \"input\", 4);\r\n        i0.ɵɵelementStart(12, \"button\", 5);\r\n        i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_12_listener() { return ctx.hide = !ctx.hide; });\r\n        i0.ɵɵelementStart(13, \"mat-icon\");\r\n        i0.ɵɵtext(14);\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementStart(15, \"div\", 6);\r\n        i0.ɵɵelementStart(16, \"button\", 7);\r\n        i0.ɵɵtext(17, \"Submit\");\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementStart(18, \"p\", 8);\r\n        i0.ɵɵtext(19, \"Don't have an account? \");\r\n        i0.ɵɵelementStart(20, \"a\", 9);\r\n        i0.ɵɵtext(21, \"Register here!\");\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementEnd();\r\n    } if (rf & 2) {\r\n        let tmp_1_0;\r\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\r\n        i0.ɵɵadvance(6);\r\n        i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx.loginForm.get(\"email\")) == null ? null : tmp_1_0.invalid);\r\n        i0.ɵɵadvance(5);\r\n        i0.ɵɵproperty(\"type\", ctx.hide ? \"password\" : \"text\");\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵattribute(\"aria-label\", \"Hide password\")(\"aria-pressed\", ctx.hide);\r\n        i0.ɵɵadvance(2);\r\n        i0.ɵɵtextInterpolate(ctx.hide ? \"visibility_off\" : \"visibility\");\r\n    } }, directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i4.MatFormField, i4.MatLabel, i5.MatInput, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i1.RequiredValidator, i6.NgIf, i7.MatButton, i4.MatSuffix, i8.MatIcon, i4.MatError], styles: [\".center-container[_ngcontent-%COMP%] {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n    height: 100vh; \\r\\n  }\\r\\n  \\r\\n  .example-container[_ngcontent-%COMP%] {\\r\\n    text-align: center;\\r\\n    margin-bottom: 16px; \\r\\n  }\\r\\n  \\r\\n  .button-container[_ngcontent-%COMP%] {\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n    margin-top: 16px; \\r\\n  }\\r\\n  \\r\\n  .center-form[_ngcontent-%COMP%] {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n    height: 80vh;\\r\\n    margin: 0;\\r\\n  }\\r\\n  \\r\\n  mat-form-field[_ngcontent-%COMP%] {\\r\\n    max-width: 400px; \\r\\n  }\\r\\n  \\r\\n  .register-link[_ngcontent-%COMP%] {\\r\\n    text-align: center;\\r\\n  }\\r\\n  \\r\\n  .register-link[_ngcontent-%COMP%]   a[_ngcontent-%COMP%] {\\r\\n    color: #1976D2;\\r\\n    text-decoration: none;\\r\\n    font-weight: bold;\\r\\n  }\\r\\n  \\r\\n  .register-link[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]:hover {\\r\\n    text-decoration: underline;\\r\\n  }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxvZ2luLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLG1CQUFtQjtJQUNuQix1QkFBdUI7SUFDdkIsYUFBYSxFQUFFLGdDQUFnQztFQUNqRDs7RUFFQTtJQUNFLGtCQUFrQjtJQUNsQixtQkFBbUIsRUFBRSw4Q0FBOEM7RUFDckU7O0VBQ0E7SUFDRSxhQUFhO0lBQ2IsdUJBQXVCO0lBQ3ZCLGdCQUFnQixFQUFFLGdFQUFnRTtFQUNwRjs7RUFFQTtJQUNFLGFBQWE7SUFDYixzQkFBc0I7SUFDdEIsbUJBQW1CO0lBQ25CLHVCQUF1QjtJQUN2QixZQUFZO0lBQ1osU0FBUztFQUNYOztFQUVBO0lBQ0UsZ0JBQWdCLEVBQUUsK0JBQStCO0VBQ25EOztFQUVBO0lBQ0Usa0JBQWtCO0VBQ3BCOztFQUVBO0lBQ0UsY0FBYztJQUNkLHFCQUFxQjtJQUNyQixpQkFBaUI7RUFDbkI7O0VBRUE7SUFDRSwwQkFBMEI7RUFDNUIiLCJmaWxlIjoibG9naW4uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jZW50ZXItY29udGFpbmVyIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgaGVpZ2h0OiAxMDB2aDsgLyogMTAwJSBvZiB0aGUgdmlld3BvcnQgaGVpZ2h0ICovXHJcbiAgfVxyXG4gIFxyXG4gIC5leGFtcGxlLWNvbnRhaW5lciB7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxNnB4OyAvKiBBZGp1c3QgdGhlIG1hcmdpbiBiZXR3ZWVuIHRoZSBmb3JtIGZpZWxkcyAqL1xyXG4gIH1cclxuICAuYnV0dG9uLWNvbnRhaW5lciB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBtYXJnaW4tdG9wOiAxNnB4OyAvKiBBZGp1c3QgdGhlIG1hcmdpbiBiZXR3ZWVuIHRoZSBwYXNzd29yZCBmaWVsZCBhbmQgdGhlIGJ1dHRvbiAqL1xyXG4gIH1cclxuICBcclxuICAuY2VudGVyLWZvcm0ge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBoZWlnaHQ6IDgwdmg7XHJcbiAgICBtYXJnaW46IDA7XHJcbiAgfVxyXG4gIFxyXG4gIG1hdC1mb3JtLWZpZWxkIHtcclxuICAgIG1heC13aWR0aDogNDAwcHg7IC8qIEFkanVzdCB0aGUgdmFsdWUgYXMgbmVlZGVkICovXHJcbiAgfVxyXG5cclxuICAucmVnaXN0ZXItbGluayB7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgfVxyXG4gIFxyXG4gIC5yZWdpc3Rlci1saW5rIGEge1xyXG4gICAgY29sb3I6ICMxOTc2RDI7XHJcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxuICB9XHJcbiAgXHJcbiAgLnJlZ2lzdGVyLWxpbmsgYTpob3ZlciB7XHJcbiAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcclxuICB9Il19 */\"] });\r\n"]},"metadata":{},"sourceType":"module"}